{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","this","timer","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"kLAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAVP,gCAaE,SAAmBC,GAAY,IACrBC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,MAlBrE,kCAsBE,WACEE,cAAcV,KAAKC,SAvBvB,oBA0BE,WAAU,IACAH,EAASE,KAAKH,MAAdC,KAER,OACE,8BAAOA,EAAKQ,0BA9BlB,GAA2BK,IAAMC,WCsDlBC,EAtDf,4MACEhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,KAXpC,EAcEI,cAAgB,WACd,EAAKf,SAAS,CAAEY,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAf/C,4CAkBE,WAAU,IAAD,EAC+BrB,KAAKH,MAAnCiB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,2CAEG,IAEDR,GAAkB,kBAAC,EAAD,CAAON,KAAMO,KAGjC,4BACEQ,KAAK,SACLC,QAASxB,KAAKgB,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,eAFhB,wBA3CR,GAAyBP,IAAMC,WCC/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0b018eb1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString())\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span>{time.toLocaleTimeString()}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.round(Math.random() * 100) });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {\n          isClockVisible && <Clock name={clockName} />\n          }\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}